prop_html %>%
str_extract('<div class="margin marginright marginbottom">\\s+.*')
prop_html %>%
str_extract('<div class="margin marginright marginbottom">\\s+.*(</span>|<br>)')
prop_html %>%
str_extract('<div class="margin marginright marginbottom">\\s+.*') %>%
str_replace('</span>.+', '') %>%
str_replace('<br>.+', '')
prop_html %>%
str_extract('<div class="margin marginright marginbottom">\\s+.*') %>%
str_replace('</span>.+', '') %>%
str_replace('<br>.+', '') %>%
str_replace('<div .+\\s\\s', '')
property_df <- data.frame(title = c(), location = c(), size = c(), price = c(), coordinates = c(), info = c())
for(i in 1:length(properties)){
prop_html <- read_html(str_c(lw_root, properties[i]))
title <- prop_html %>%
html_nodes('.detTitle') %>%
str_replace('<div class="detTitle">', '') %>%
str_replace('</div>', '')
location <- title %>%
str_extract('.+, Virginia Farms and Ranches') %>%
str_replace(', Virginia Farms and Ranches', '')
size <- prop_html %>%
str_extract('<div class="pattname">Parcel Size:</div>\\s+.+') %>%
str_extract('<div class="pattvalue">.+</div>') %>%
str_replace('<div class="pattvalue">', '') %>%
str_replace('</div>', '')
price <- prop_html %>%
str_extract('<div class="pattname">Price:</div>\\s+.+') %>%
str_extract('<div class="pattvalue">.+</div>') %>%
str_replace('<div class="pattvalue">', '') %>%
str_replace('</div>', '')
coordinates <- prop_html %>%
str_extract('<div id="iframe-map">\\s+<iframe .+>') %>%
str_extract('q=.+;zoom')
info <- prop_html %>%
str_extract('<div class="margin marginright marginbottom">\\s+.*') %>%
str_replace('</span>.+', '') %>%
str_replace('<br>.+', '') %>%
str_replace('<div .+\\s\\s', '')
property_df <- rbind(property_df, data.frame(title = title, location = location, size = size, price = price, coordinates = coordinates, info = info))
}
property_df
property_df <- data.frame(title = c(), location = c(), size = c(), price = c(), coordinates = c(), info = c())
for(i in 1:length(properties)){
prop_html <- read_html(str_c(lw_root, properties[i]))
title <- prop_html %>%
html_nodes('.detTitle') %>%
str_replace('<div class="detTitle">', '') %>%
str_replace('</div>', '')
location <- title %>%
str_extract('.+, Virginia Farms and Ranches') %>%
str_replace(', Virginia Farms and Ranches', '')
size <- prop_html %>%
str_extract('<div class="pattname">Parcel Size:</div>\\s+.+') %>%
str_extract('<div class="pattvalue">.+</div>') %>%
str_replace('<div class="pattvalue">', '') %>%
str_replace('</div>', '')
price <- prop_html %>%
str_extract('<div class="pattname">Price:</div>\\s+.+') %>%
str_extract('<div class="pattvalue">.+</div>') %>%
str_replace('<div class="pattvalue">', '') %>%
str_replace('</div>', '')
coordinates <- prop_html %>%
str_extract('<div id="iframe-map">\\s+<iframe .+>') %>%
str_extract('q=.+;zoom') %>%
str_replace('q=', '') %>%
str_replace(';zoom', '') %>%
str_replace('%2C', ', ')
info <- prop_html %>%
str_extract('<div class="margin marginright marginbottom">\\s+.*') %>%
str_replace('</span>.+', '') %>%
str_replace('<br>.+', '') %>%
str_replace('<div .+\\s\\s', '')
property_df <- rbind(property_df, data.frame(title = title, location = location, size = size, price = price, coordinates = coordinates, info = info))
}
property_df
prop_html %>%
str_extract('<div id="iframe-map">\\s+<iframe .+>') %>%
str_extract('q=.+;zoom') %>%
str_replace('q=', '') %>%
str_replace('\\&amp;zoom', '') %>%
str_replace('%2C', ', ')
lw <- 'http://www.landwatch.com/default.aspx?ct=r&type=5,77;13,338&r.PSIZ=25%2c&px=500000&pg='
lw_root <- 'http://www.landwatch.com'
lw_pages <- 13
trial <- str_c(lw, 1)
html <- read_html(trial)
properties <- html %>%
html_nodes('.propName a') %>%
str_extract("href=.*onclick") %>%
str_replace('href=\"', '') %>%
str_replace('\" onclick', '')
prop_html <- read_html(str_c(lw_root, properties[3]))
prop_html
property_df <- data.frame(title = c(), location = c(), size = c(), price = c(), coordinates = c(), info = c())
for(i in 1:length(properties)){
prop_html <- read_html(str_c(lw_root, properties[i]))
title <- prop_html %>%
html_nodes('.detTitle') %>%
str_replace('<div class="detTitle">', '') %>%
str_replace('</div>', '')
location <- title %>%
str_extract('.+, Virginia Farms and Ranches') %>%
str_replace(', Virginia Farms and Ranches', '')
size <- prop_html %>%
str_extract('<div class="pattname">Parcel Size:</div>\\s+.+') %>%
str_extract('<div class="pattvalue">.+</div>') %>%
str_replace('<div class="pattvalue">', '') %>%
str_replace('</div>', '')
price <- prop_html %>%
str_extract('<div class="pattname">Price:</div>\\s+.+') %>%
str_extract('<div class="pattvalue">.+</div>') %>%
str_replace('<div class="pattvalue">', '') %>%
str_replace('</div>', '')
coordinates <- prop_html %>%
str_extract('<div id="iframe-map">\\s+<iframe .+>') %>%
str_extract('q=.+;zoom') %>%
str_replace('q=', '') %>%
str_replace('\\&amp;zoom', '') %>%
str_replace('%2C', ', ')
info <- prop_html %>%
str_extract('<div class="margin marginright marginbottom">\\s+.*') %>%
str_replace('</span>.+', '') %>%
str_replace('<br>.+', '') %>%
str_replace('<div .+\\s\\s', '')
property_df <- rbind(property_df, data.frame(title = title, location = location, size = size, price = price, coordinates = coordinates, info = info))
}
property_df
lw_scrape <- function(){
property_df <- data.frame(title = c(), location = c(), size = c(), price = c(), coordinates = c(), info = c())
for(i in 1:lw_pages){
page <- str_c(lw, i)
html <- read_html(page)
properties <- html %>%
html_nodes('.propName a') %>%
str_extract("href=.*onclick") %>%
str_replace('href=\"', '') %>%
str_replace('\" onclick', '')
for(j in 1:length(properties)){
prop_html <- read_html(str_c(lw_root, properties[j]))
title <- prop_html %>%
html_nodes('.detTitle') %>%
str_replace('<div class="detTitle">', '') %>%
str_replace('</div>', '')
location <- title %>%
str_extract('.+, Virginia Farms and Ranches') %>%
str_replace(', Virginia Farms and Ranches', '')
size <- prop_html %>%
str_extract('<div class="pattname">Parcel Size:</div>\\s+.+') %>%
str_extract('<div class="pattvalue">.+</div>') %>%
str_replace('<div class="pattvalue">', '') %>%
str_replace('</div>', '')
price <- prop_html %>%
str_extract('<div class="pattname">Price:</div>\\s+.+') %>%
str_extract('<div class="pattvalue">.+</div>') %>%
str_replace('<div class="pattvalue">', '') %>%
str_replace('</div>', '')
coordinates <- prop_html %>%
str_extract('<div id="iframe-map">\\s+<iframe .+>') %>%
str_extract('q=.+;zoom') %>%
str_replace('q=', '') %>%
str_replace('\\&amp;zoom', '') %>%
str_replace('%2C', ', ')
info <- prop_html %>%
str_extract('<div class="margin marginright marginbottom">\\s+.*') %>%
str_replace('</span>.+', '') %>%
str_replace('<br>.+', '') %>%
str_replace('<div .+\\s\\s', '')
property_df <- rbind(property_df, data.frame(title = title, location = location, size = size, price = price, coordinates = coordinates, info = info))
}
}
property_df
}
lw_properties <- lw_scrape()
lw_properties
str(lw_properties)
head(lw_properties)
write_tsv(lw_properties, 'landwatch_properties.tsv')
library(data.table)
library(magrittr)
?data.table
flights <- fread('https://raw.githubusercontent.com/wiki/arunsrinivasan/flights/NYCflights14/flights14.csv')
dim(dim())
dim(flights)
flights[carrier == 'AA',
.N,
by = .(origin, dest)] %>%
.[order(origin, -dest)]
trial_eval <- "carrier == 'AA"
trial_eval
eval(trial_eval)
flights[trial_eval,
.N,
by = .(origin, dest)] %>%
.[order(origin, -dest)]
flights[eval(trial_eval),
.N,
by = .(origin, dest)] %>%
.[order(origin, -dest)]
trial_eval <- "carrier == 'AA'"
trial_eval
eval(trial_eval)
flights[eval(trial_eval,
.N,
by = .(origin, dest)] %>%
.[order(origin, -dest)]
flights[
carrier == 'AA',
.N,
by = .(origin,
dest)
][
order(
origin,
-dest
)
]
flights[,
.N,
.(dep_late = dep_delay > 0, arr_late = arr_delay > 0)]
flights[,
.(dep_delay, arr_delay) %>%
lapply(mean)]
flights[,
.(mean(dep_delay), mean(arr_delay))]
flights[carrier == 'AA',
.(dep_delay, arr_delay) %>%
lapply(mean),
by = origin]
flights[carrier == 'AA',
.(mean(dep_delay), mean(arr_delay)),
by = origin]
flights[carrier == 'AA',
lapply(.SD, mean),
by = .(origin, dest, month),
.SDcols = c(x, y)]
flights[,
head(.SD, 2),
by = month]
DT[,
.(val = c(a, b)),
by = ID]
DT[,
.(val = list(c(a,b))),
by = ID] %>%
str()
flights[eval(trial_eval),
.N,
by = .(origin, dest)] %>%
.[order(origin, -dest)]
trial_eval <- "carrier == 'AA'"
trial_eval
eval(trial_eval)
trial_eval <- quote(carrier == 'AA')
trial_eval
eval(trial_eval)
flights[eval(trial_eval),
.N,
by = .(origin, dest)] %>%
.[order(origin, -dest)]
trial2_eval <- eval(carrier == 'AA')
setkey(flights, origin)
head(flights)
setkeyv(flights, 'origin')
head(flights)
flights[origin == 'JFK']
flights[.('JFK')]
flights['JFK']
flights[c('LGA', 'JFK')]
key(flights)
setkeyv(c('flights', 'origin', 'dest'))
setkeyv(.('flights', 'origin', 'dest'))
setkeyv(flights, c('origin', 'dest'))
key(flights)
flights(.('JFK', 'MIA'))
flights[.('JFK', 'MIA')]
flights[.(c('JFK', 'LGA'), 'MIA')]
unique(flights$origin)
flights[.('LGA', 'TPA'),
arr_delay]
flights[.('LGA', 'TPA'),
arr_delay] %>%
head()
flights[.('LGA', 'TPA'),
.(arr_delay)]
flights[.('LGA', 'TPA'),
.('arr_delay'),
with= F]
flights[.('LGA', 'TPA'),
c('arr_delay'),
with= F]
flights[.('LGA', 'TPA'),
c('arr_delay')]
flights[.('LGA', 'TPA'),
.('arr_delay')]
flights[.('LGA', 'TPA'),
c('arr_delay')]
flights[.('LGA', 'TPA'),
c('arr_delay')][
order(-arr_delay)
]
flights[.('LGA', 'TPA'),
max(arr_delay)]
setkey(flights, hour)
key(flights)
flights[.(24)]
flights[.(24), hour:=0]
key(flights)
flights[,sort(unique(hour))]
setkey(flights, origin, dest)
key(flights)
setkey(flights, origin, dest)
key(flights)
flights[origin,
max(dep_delay),
by = month]
flights[.(origin),
max(dep_delay),
by = month]
flights['JFK',
max(dep_delay),
by = month]
flights['JFK',
max(dep_delay),
keyby = month]
flights[.('JFK', 'MIA'),
mult = 'first']
flights[.(c('LGA', 'JFK', 'EWR'), 'XNA'),
mult = 'last']
flights[.(c('LGA', 'JFK', 'EWR'), 'XNA'),
mult = 'last',
nomatch = F]
flights[.(c('LGA', 'JFK', 'EWR'), 'XNA'),
mult = 'last',
nomatch = T]
flights[.(c('LGA', 'JFK', 'EWR'), 'XNA'),
mult = 'last',
nomatch = 0]
flights <- fread('https://raw.githubusercontent.com/wiki/arunsrinivasan/flights/NYCflights14/flights14.csv')
flights[, `:=`(speed = distnce/air_time/60,
delay = arr_delay + dep_delay)]
flights[, `:=`(speed = distance/air_time/60,
delay = arr_delay + dep_delay)]
flights
flights[,
c('speed', 'delay') := list(distance/air_time/60,
arr_delay + dep_delay)]
flights
flights[hour == 24,
hour:=0]
flights[,sort(unique(hour))]
flights[hour == 24,
hour:=0][]
flights[,sort(unique(hour))]
flights[, delay:= NULL]
flights[, delay:= NULL][]
flights[,
max(speed),
by = (origin, dest)]
flights[,
max(speed),
by = .(origin, dest)]
flights[,
max_speed := max(speed),
by = .(origin, dest)][]
max(list(c(2, 3, 4), c(6,5,4)))
?SDCols
flights[,
c(max_dep_delay, max_arr_delay) := max(.sd),
SDCols = (dep_delay, arr_delay)][]
flights[,
c(max_dep_delay, max_arr_delay) := max(.sd),
.SDcols = c(dep_delay, arr_delay)][]
flights[,
c(max_dep_delay, max_arr_delay) := lapply(.SD, max),
.SDcols = c(dep_delay, arr_delay)][]
flights[,
c(max_dep_delay, max_arr_delay) := lapply(.SD, max),
.SDcols = c('dep_delay', 'arr_delay')][]
flights[,
c('max_dep_delay', 'max_arr_delay') := lapply(.SD, max),
.SDcols = c('dep_delay', 'arr_delay')][]
flights[,
c('max_dep_delay', 'max_arr_delay') := lapply(.SD, max),
by = month,
.SDcols = c('dep_delay', 'arr_delay')][]
lapply(list(c(2, 3, 4), c(6,5,4)), max)
flights[,
c('speed', 'max_speed', 'max_dep_delay', 'max_arr_delay') := NULL]
names(flights)
test <- function(x){
x[,
speed := distance/(air_time/60)]
x[,max_speed = max(speed), by = month]
}
test(flights)[]
test(flights)
test <- function(x){
x[,
speed := distance/(air_time/60)]
x[,.(max_speed = max(speed)), by = month]
}
test(flights)
test(flights)[]
flights
flights %>% names()
flights[, speed:= NULL]
flights %>% names()
test <- function(x){
x <- copy(x)
x[,
speed := distance/(air_time/60)]
x[,
.(max_speed = max(speed)),
by = month]
}
test(flights)[]
?shallow()
version(data.table())
version(data.table
)
flights <- fread('https://raw.githubusercontent.com/wiki/arunsrinivasan/flights/NYCflights14/flights14.csv')
setindex(flights, origin)
names(attributes(flights))
indices(flights)
setindex(flights, origin, dest)
indices(flights)
setkey(flights, origin)
names(attributes(flights))
flights['JFK']
flights['JFK', on = 'origin']
flights[1, on = 'month']
flights['1', on = 'month']
flights['MIA', on = 'dest']
flights['MIA', on = 'dest', verbose = T]
flights['JFK', on = 'origin', verbose = T]
flights[.('JFK', 'LAX'), on = c('origin', 'dest')][1:5]
flights[.('JFK', 'LAX'), on = c('origin', 'dest'), verbose = T][1:5]
flights[.(c('JFK', 'LGA'), 'LAX'), on c('origin', 'dest')]
flights[.(list('JFK', 'LGA'), 'LAX'), on c('origin', 'dest')]
flights[.(c('JFK', 'LGA'), 'LAX'), on = c('origin', 'dest')]
flights[.("LGA", 'TPA'), lapply(.SD, max), on = c('origin', 'dest'), .SDcols = c('arr_delay', 'dep_delay')]
flights['JFK', max(dep_delay), on = origin, by = month]
flights['JFK', max(dep_delay), on = 'origin', by = month]
library(tidyverse)
library(stringr)
library(rvest)
lw_properties <- read_tsv('landwatch_properties.tsv')
lw_properties %>% separate(coordinates, c('lat', 'lon'), sep = ', ')
library(ggmap)
qmap(location = 'virginia', zoom = 10, source = 'osm')
qmap(location = 'virginia', zoom = 10)
qmap(location = 'virginia', zoom = 5)
qmap(location = 'virginia', zoom = 7)
qmap(location = 'virginia', zoom = 7) +
geom_point(aes(lon, lat), data = lw_properties)
lw_properties
lw_properties %>% separate(coordinates, c('lat', 'lon'), sep = ', ')
lw_properties %>% separate(coordinates, c('lat', 'lon'), sep = ', ')
lw_properties <- lw_properties %>% separate(coordinates, c('lat', 'lon'), sep = ', ')
qmap(location = 'virginia', zoom = 7) +
geom_point(aes(lon, lat), data = lw_properties)
lw_properties <- read_tsv('landwatch_properties.tsv')
lw_properties <- lw_properties %>% separate(coordinates, c('lat', 'lon'), sep = ', ') %>%
mutate(lon = as.numeric_version(lon)) %>%
mutate(lat = as.numeric_version(lat))
lw_properties <- lw_properties %>%
separate(coordinates, c('lat', 'lon'), sep = ', ') %>%
mutate(lon = as.numeric(lon)) %>%
mutate(lat = as.numeric(lat))
lw_properties
lw_properties
lw_properties
qmap(location = 'virginia', zoom = 7) +
geom_point(aes(lon, lat), data = lw_properties)
dim(lw_properties)
setwd('//media/beemyfriend/UUI/R_Projects/D3MO/')
packages <- c('dplyr', 'stringr', 'htmltab', 'tidyr', 'rvest', 'readr')
sapply(packages, library, character.only = T)
every_flood_death <- readr::read_tsv('data/us_flood_data/every_flood_death_20102014.tsv')
circumstance <- every_flood_death$Circumstance
find_circ <- function(vect, i){ifelse(vect[i] == '"', find_circ(vect, i-1), vect[i])}
circumstance <- sapply(seq_along(circumstance), function(i){find_circ(circumstance, i)})
every_flood_death$Circumstance <- circumstance
unique_circumstance <- circumstance %>% unique %>% .[!is.na(.)]
unique_circumstance %>% str_detect('\s+')
unique_circumstance %>% str_detect('\\s+')
unique_circumstance %>% str_detect('\\s\\s+')
unique_circumstance[1]
unique_circumstance[1] %>% str_replace_all('\\s\\s+', ' ')
circumstance <- every_flood_death$Circumstance %>%
str_replace_all('\\s\\s+', ' ')
find_circ <- function(vect, i){ifelse(vect[i] == '"', find_circ(vect, i-1), vect[i])}
circumstance <- sapply(seq_along(circumstance), function(i){find_circ(circumstance, i)})
every_flood_death$Circumstance <- circumstance
unique_circumstance <- circumstance %>% unique %>% .[!is.na(.)]
unique_circumstance[1]
unique_circumstance[13]
unique_circumstance[19]
unique_circumstance[18]
unique_circumstance[180]
every_flood_death$Circumstance %>% head
every_flood_death$Circumstance %>% head
write_tsv <- write_tsv('data/us_flood_data/every_flood_death_20102014.tsv')
write_tsv <- write_tsv(every_flood_death, 'data/us_flood_data/every_flood_death_20102014.tsv')
install.packages('tidytext')
packages <- c('dplyr', 'stringr', 'htmltab', 'tidyr', 'rvest', 'readr', 'tidytext')
sapply(packages, library, character.only = T)
unnest_tokens(unique_circumstance)
library(tidytext)
